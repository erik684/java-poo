package ordenar;
import javax.swing.*;
import java.util.ArrayList;

public class GUI extends javax.swing.JFrame {
    ArrayList<Integer> Vet_Linhas = new ArrayList<>();
    ArrayList<Integer> Vet_Organizado = new ArrayList<>();
    JFileChooser fileChooser = new JFileChooser();
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        bt_Selecionar_Arquivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fd_Arquivo = new javax.swing.JTextField();
        bt_Ler_Arquivo = new javax.swing.JButton();
        btn_BubbleSort = new javax.swing.JButton();
        btn_InsertionSort = new javax.swing.JButton();
        btn_MergeSort = new javax.swing.JButton();
        btn_QuickSort = new javax.swing.JButton();
        btn_SelecionSort = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_TempoEx = new javax.swing.JTextField();
        bt_Sair = new javax.swing.JButton();
        bt_Salvar = new javax.swing.JButton();
        btn_HeapSort = new javax.swing.JButton();
        btn_ShellSort = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ordenador de Arquivos .txt");
        setResizable(false);

        bt_Selecionar_Arquivo.setBackground(new java.awt.Color(204, 204, 204));
        bt_Selecionar_Arquivo.setText("Selecionar Arquivo");
        bt_Selecionar_Arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_Selecionar_ArquivoActionPerformed(evt);
            }
        });

        jLabel1.setText("Arquivo:");

        fd_Arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fd_ArquivoActionPerformed(evt);
            }
        });

        bt_Ler_Arquivo.setText("Ler Arquivo");
        bt_Ler_Arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_Ler_ArquivoActionPerformed(evt);
            }
        });

        btn_BubbleSort.setText("Bubble Sort");
        btn_BubbleSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BubbleSortActionPerformed(evt);
            }
        });

        btn_InsertionSort.setText("Insertion Sort");
        btn_InsertionSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertionSortActionPerformed(evt);
            }
        });

        btn_MergeSort.setText("MergeSort");
        btn_MergeSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MergeSortActionPerformed(evt);
            }
        });

        btn_QuickSort.setText("QuickSort");
        btn_QuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_QuickSortActionPerformed(evt);
            }
        });

        btn_SelecionSort.setText("SelectionSort");
        btn_SelecionSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SelecionSortActionPerformed(evt);
            }
        });

        jLabel2.setText("Tempo de Execução:");

        tf_TempoEx.setEditable(false);

        bt_Sair.setText("Sair");
        bt_Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SairActionPerformed(evt);
            }
        });

        bt_Salvar.setText("Salvar");
        bt_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SalvarActionPerformed(evt);
            }
        });

        btn_HeapSort.setText("HeapSort");
        btn_HeapSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HeapSortActionPerformed(evt);
            }
        });

        btn_ShellSort.setText("ShellSort");
        btn_ShellSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ShellSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt_Selecionar_Arquivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bt_Ler_Arquivo))
                            .addComponent(fd_Arquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_QuickSort, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_BubbleSort)
                            .addComponent(btn_ShellSort, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_InsertionSort, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_MergeSort))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bt_Salvar)
                                    .addComponent(btn_SelecionSort, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(bt_Sair))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_HeapSort)))))))
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_TempoEx, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Selecionar_Arquivo)
                    .addComponent(bt_Ler_Arquivo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fd_Arquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_BubbleSort)
                    .addComponent(btn_InsertionSort)
                    .addComponent(btn_MergeSort))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_QuickSort)
                            .addComponent(btn_SelecionSort)
                            .addComponent(btn_HeapSort))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ShellSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_TempoEx, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Sair)
                    .addComponent(bt_Salvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fd_ArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fd_ArquivoActionPerformed
        
    }//GEN-LAST:event_fd_ArquivoActionPerformed

    private void bt_Selecionar_ArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_Selecionar_ArquivoActionPerformed
        int returnDial = fileChooser.showOpenDialog(null);
                
        if (returnDial == JFileChooser.APPROVE_OPTION) {
           JOptionPane.showMessageDialog(null, "Arquivo Selecionado, caminho: " + (fileChooser.getSelectedFile().getAbsoluteFile()));
        fd_Arquivo.setText(String.valueOf(fileChooser.getSelectedFile().getAbsoluteFile())); 
        }
        else
            JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_bt_Selecionar_ArquivoActionPerformed

    private void bt_Ler_ArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_Ler_ArquivoActionPerformed
       if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
                  
        }
       
       else {
            LerArquivo ler = new LerArquivo();
            long start = System.nanoTime(); // conta tempo de execucao
            Vet_Linhas = ler.ler_arquivo(fileChooser);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Lido, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            }
           
    }//GEN-LAST:event_bt_Ler_ArquivoActionPerformed

    private void btn_BubbleSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BubbleSortActionPerformed
        if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            BubbleSort bubble = new BubbleSort();
            long start = System.nanoTime();
            Vet_Organizado = bubble.Ordenar_Bubble(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_BubbleSortActionPerformed

    private void btn_InsertionSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertionSortActionPerformed
      if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            InsertionSort insert = new InsertionSort();
            long start = System.nanoTime();
            Vet_Organizado = insert.InsertionSort(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_InsertionSortActionPerformed

    private void btn_QuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_QuickSortActionPerformed
    if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            QuickSort quick = new QuickSort();
            long start = System.nanoTime();
            Vet_Organizado = quick.sort(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_QuickSortActionPerformed

    private void btn_MergeSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MergeSortActionPerformed
        if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            MergeSort merge = new MergeSort();
            long start = System.nanoTime();
            Vet_Organizado = merge.sort(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_MergeSortActionPerformed

    private void btn_SelecionSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SelecionSortActionPerformed
       if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            SelectionSort selec = new SelectionSort();
            long start = System.nanoTime();
            Vet_Organizado = selec.SelectionSort(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_SelecionSortActionPerformed

    private void bt_SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bt_SairActionPerformed

    private void bt_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SalvarActionPerformed
        SalvarArquivo save = new SalvarArquivo();
        save.SalvarArquivo(Vet_Organizado);
        //JOptionPane.showMessageDialog(null, "Arquivo Selecionado, caminho: " + (fileChooser.getSelectedFile().getAbsoluteFile()));
    }//GEN-LAST:event_bt_SalvarActionPerformed

    private void btn_HeapSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HeapSortActionPerformed
        HeapSort sort = new HeapSort();
        Vet_Organizado = sort.sort(Vet_Linhas);
    }//GEN-LAST:event_btn_HeapSortActionPerformed

    private void btn_ShellSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ShellSortActionPerformed
               if (fd_Arquivo.getText().isEmpty()) {
           JOptionPane.showMessageDialog(null,"Selecione um Arquivo ou Digite o caminho!!! " ,"Erro", JOptionPane.ERROR_MESSAGE);
           }
        else {
            ShellSort shell = new ShellSort();
            long start = System.nanoTime();
            Vet_Organizado = shell.Ordenar_Shell(Vet_Linhas);
            long end = System.nanoTime();
            long duration = (end-start);
            JOptionPane.showMessageDialog(null,"Arquivo Organizado!, duração: "+(duration/1000000)+"ms" ,"Concluido", JOptionPane.INFORMATION_MESSAGE);
            tf_TempoEx.setText(String.valueOf(duration/1000000));
            
        }
    }//GEN-LAST:event_btn_ShellSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Ler_Arquivo;
    private javax.swing.JButton bt_Sair;
    private javax.swing.JButton bt_Salvar;
    private javax.swing.JButton bt_Selecionar_Arquivo;
    private javax.swing.JButton btn_BubbleSort;
    private javax.swing.JButton btn_HeapSort;
    private javax.swing.JButton btn_InsertionSort;
    private javax.swing.JButton btn_MergeSort;
    private javax.swing.JButton btn_QuickSort;
    private javax.swing.JButton btn_SelecionSort;
    private javax.swing.JButton btn_ShellSort;
    private javax.swing.JTextField fd_Arquivo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tf_TempoEx;
    // End of variables declaration//GEN-END:variables
}
